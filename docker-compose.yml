version: "3.8"

services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - app-network 


  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - '9092:9092'
      - '29092:29092'
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
    networks:
      - app-network

  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "3006:3005"
    depends_on:
      - kafka
      - mongodb
    environment:
      MONGODB_URL: mongodb://mongodb:27017/orders
      KAFKA_BROKER: kafka:9092
    networks:
      - app-network

  inventory-service:
    build: ./inventory-service
    container_name: inventory-service
    ports:
      - "3002:3002"
    depends_on:
      - kafka
      - mongodb
    environment:
      MONGODB_URL: mongodb://mongodb:27017/inventory
      KAFKA_BROKER: kafka:9092
    networks:
      - app-network
  
networks:
    app-network: 
      driver : bridge

volumes:
  mongo-data: